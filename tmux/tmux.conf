#: Reset {{{

unbind C-b
unbind C-f
unbind %
unbind S-c

#: }}}

# Reload config
bind r source-file ~/.config/tmux/tmux.conf \; \
display-message "Config Reloaded."
set-environment -g TMUX_PLUGIN_MANAGER_PATH "$HOME/.config/env/tmux/plugins/"

#: Gloabl config {{{
# Change the default $TERM to tmux-256color
set -g default-terminal "xterm-256color"
# Enable RGB colour if running in xterm(1)
set -ga terminal-overrides ",xterm-256color:RGB"

# Turn the mouse on, but without copy mode dragging
set -g mouse on
unbind -n MouseDrag1Pane
unbind -Tcopy-mode MouseDrag1Pane

# Address vim mode switching delay (http://superuser.com/a/252717/65504)
set -sg escape-time 1

# Enable the new keyboard protocol for Tmux, and applying to the applications inside it on demand
set -s extended-keys on
set -as terminal-features 'xterm*:extkeys'

# Increase scrollback buffer size from 2000 to 50000 lines
set -g history-limit 50000

# No bells at all
set -g bell-action none

# Focus events enabled for terminals that support them
set -g focus-events on

#: }}}


#: Gloabl key bindings {{{
# Change prefix to Ctrl-a
set -g prefix C-a
bind C-a send-prefix

# Use neovim key bindings
set -g mode-keys vi
set -g status-keys vi

# Increase repeat time for repeatable commands
set -g repeat-time 1000


#: }}}

# kitty kitten show_key -m kitty 获取CSI, 或者使用cat
#: Pane {{{
# Smart pane switching with awareness of Neovim splits.
bind-key -n M-h if -F "#{@pane-is-vim}" 'send-keys Escape "[104;9u"'  'select-pane -L'
bind-key -n M-j if -F "#{@pane-is-vim}" 'send-keys Escape "[106;9u"'  'select-pane -D'
bind-key -n M-k if -F "#{@pane-is-vim}" 'send-keys Escape "[107;9u"'  'select-pane -U'
bind-key -n M-l if -F "#{@pane-is-vim}" 'send-keys Escape "[108;9u"'  'select-pane -R'

bind-key -n C-S-h if -F "#{@pane-is-vim}" 'send-keys Escape "[104:72;6u"' 'resize-pane -L 3'
bind-key -n C-S-j if -F "#{@pane-is-vim}" 'send-keys Escape "[106:74;6u"' 'resize-pane -D 3'
bind-key -n C-S-k if -F "#{@pane-is-vim}" 'send-keys Escape "[107:75;6u"' 'resize-pane -U 3'
bind-key -n C-S-l if -F "#{@pane-is-vim}" 'send-keys Escape "[108:76;6u"' 'resize-pane -R 3'

bind-key -n C-M-k if -F "#{@pane-is-vim}" 'send-keys Escape "[107;13u"' 'split-window -v -c "#{pane_current_path}"'
bind-key -n C-M-j if -F "#{@pane-is-vim}" 'send-keys Escape "[106;13u"' 'split-window -v -c "#{pane_current_path}"'
bind-key -n C-M-l if -F "#{@pane-is-vim}" 'send-keys Escape "[108;13u"' 'split-window -h -c "#{pane_current_path}"'
bind-key -n C-M-h if -F "#{@pane-is-vim}" 'send-keys Escape "[104;13u"' 'split-window -h -c "#{pane_current_path}"'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if -F \"#{@pane-is-vim}\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if -F \"#{@pane-is-vim}\" 'send-keys C-\\\\'  'select-pane -l'"

# bind-key -T copy-mode-vi 'M-h' select-pane -L
# bind-key -T copy-mode-vi 'M-j' select-pane -D
# bind-key -T copy-mode-vi 'M-k' select-pane -U
# bind-key -T copy-mode-vi 'M-l' select-pane -R

# bind-key -T copy-mode-vi 'C-S-h' resize-pane -L 3
# bind-key -T copy-mode-vi 'C-S-j' resize-pane -D 3
# bind-key -T copy-mode-vi 'C-S-k' resize-pane -U 3
# bind-key -T copy-mode-vi 'C-S-l' resize-pane -R 3


bind -r x kill-pane
#: }}}

#: Custom keys {{{
bind-key -n M-w if -F "#{@pane-is-vim}" 'send-keys Escape "[119;9u]"' 'kill-pane'
bind-key -n M-e if -F "#{@pane-is-vim}" 'send-keys Escape "[101;9u"'
bind-key -n M-s if -F "#{@pane-is-vim}" 'send-keys Escape "[115;9u"'
bind-key -n M-f if -F "#{@pane-is-vim}" 'send-keys Escape "[102;9u"' 'display-panes -d 0'
bind-key -n M-S-f if -F "#{@pane-is-vim}" 'send-keys Escape "[102;10u"'
bind-key -n M-/ if -F "#{@pane-is-vim}" 'send-keys Escape "[47;9u"'
bind-key -n M-r if -F "#{@pane-is-vim}" 'send-keys Escape "[114;9u"' 'send "joshuto" Enter'

#: }}}

#: Window {{{

# Highlight window when it has new activity
setw -g monitor-activity on
set -g visual-activity on

# Start window/pane index at 1
set -g base-index 1
set -g pane-base-index 1
# Re-number windows when one is closed
set -g renumber-windows on
#: }}}


#: Session {{{

# bind R command-prompt "rename-session %%"
bind q display-panes -d 0


#: }}}


#: Status {{{

# If running inside tmux ($TMUX is set), then change the status line to red
%if #{TMUX}
set status-bg red
%endif

# Refresh `status-left` and `status-right` more often, from every 15s to 5s
set -g status-interval 5

#: }}}


#: Plugins {{{
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# theme
set -g @plugin 'catppuccin/tmux'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-cpu'

# : theme config{{{
set -g @catppuccin_flavour 'mocha'
set -g @catppuccin_status_default "on"
set -g @catppuccin_status_background "default"
set -g @catppuccin_status_justify "centre"
set -g @catppuccin_window_left_separator ""
set -g @catppuccin_window_right_separator " "
set -g @catppuccin_window_middle_separator " | "

set -g @catppuccin_window_number_position "right"

set -g @catppuccin_window_current_fill "all"
set -g @catppuccin_window_current_text "#{b:pane_current_path}"

set -g @catppuccin_status_modules_left "application session"
set -g @catppuccin_status_modules_right "date_time cpu battery"
set -g @catppuccin_status_left_separator  " "
set -g @catppuccin_status_right_separator ""
set -g @catppuccin_status_fill "icon"
set -g @catppuccin_status_connect_separator "no"

set -g @catppuccin_date_time_text "%Y-%m-%d %H:%M"
set -g status-position top
#: }}}

set -g @plugin 'sainnhe/tmux-fzf'

set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-capture-pane-contents 'on'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'


# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
if "test ! -d ~/.config/env/tmux/plugins/tpm" \
    "run 'git clone https://github.com/tmux-plugins/tpm ~/.config/env/tmux/plugins/tpm && ~/.config/env/tmux/plugins/tpm/bin/install_plugins"
run -b '~/.config/env/tmux/plugins/tpm/tpm'
#: }}}
